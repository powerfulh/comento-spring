<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.comento.oracleSpringBoot.mapper.PlmMapper">
	<select id="selectWord" resultType="com.comento.oracleSpringBoot.dto.plm.Word">SELECT * FROM llm_word w where w.word = #{s}</select>
    <select id="selectCompounded" resultType="com.comento.oracleSpringBoot.dto.plm.Compound">
        select c.n, c.word, c.leftword, c.rightword, w.word cw, lw.word lw, rw.word rw
        from llm_word_compound c, llm_word w, llm_word lw, llm_word rw
        where #{n} in (c.leftword , c.rightword)
        and c.word = w.n
        and c.leftword = lw.n
        and c.rightword = rw.n
    </select>
    <select id="selectLeftRight" resultType="com.comento.oracleSpringBoot.dto.plm.Word">
        select w.* from llm_word w, llm_word_compound c
        where w.n = c.leftword and c.word = #{n}
        or w.n = c.rightword and c.word = #{n}
    </select>
    <select id="selectLearn" resultType="map">select * from plm_learn l order by l.n desc limit 100</select>
    <select id="selectOneLearn" resultType="map">select * from plm_learn l where l.word = #{n}</select>
    <select id="selectContext" resultType="map" parameterType="map">
        SELECT lw.word lw, rw.word rw, c.cnt, c.space from plm_context c, llm_word lw, llm_word rw
        where c.leftword = #{leftword}
        and c.rightword = #{rightword}
        and c.leftword = lw.n
        and c.rightword = rw.n
    </select>
    <select id="selectContextList" resultType="map">
        select w.word lw, rw.word rw, c.cnt, c.space, c.leftword, c.rightword from plm_context c, llm_word w, llm_word rw
        where c.leftword = w.n and c.rightword = rw.n
        and #{n} in (c.leftword, c.rightword)
        order by c.cnt + c.space desc
    </select>
    <select id="selectUnderstandBox" resultType="map">
        select b.src, w.word, w.type, w.memo, w.n, bw.i, b.n understand from plm_understand_box b, plm_understand_box_word bw, llm_word w
        where b.n = bw.understand
        and bw.word = w.n
        and b.activate = TRUE
        order by b.src, bw.i
    </select>

    <insert id="insertWord" parameterType="com.comento.oracleSpringBoot.dto.plm.Word">
        insert into llm_word(word, type, memo) values(#{word}, #{type}, #{wordMemo})
    </insert>
    <insert id="insertCompound" parameterType="com.comento.oracleSpringBoot.dto.plm.Compound">
        INSERT into llm_word_compound (word, leftword, rightword) values(#{word}, #{leftword}, #{rightword})
        on duplicate key update leftword = #{leftword}, rightword = #{rightword}, updated_date = now()
    </insert>
    <insert id="upsertContextCnt" parameterType="map">
        insert into plm_context(leftword, rightword, cnt) values(#{leftword}, #{rightword}, 1)
        ON DUPLICATE KEY UPDATE cnt = cnt + 1, updated_date = now()
    </insert>
    <insert id="upsertContextSpace" parameterType="map">
        insert into plm_context(leftword, rightword, space) values(#{leftword}, #{rightword}, 1)
        ON DUPLICATE KEY UPDATE space = space + 1, updated_date = now()
    </insert>
    
    <update id="deactivateUnderstandBox">UPDATE plm_understand_box set activate = FALSE, updated_date = now() WHERE n = #{n}</update>
    <update id="updateWord" parameterType="com.comento.oracleSpringBoot.dto.plm.Word">
        UPDATE llm_word w set w.type = #{type}, w.memo = #{wordMemo}, w.updated_date = now() where w.n = #{n}
    </update>
    <update id="updateToCompound">update llm_word w set w.type = '결합', w.updated_date = now() where type != '결합' and w.n = #{n}</update>

    <delete id="deleteLearn">delete from plm_learn where word = #{n}</delete>
    <delete id="deleteCanceledWord">delete from llm_word where type like '학습%' and not exists(select 1 from plm_learn l where l.word = llm_word.n)</delete>
    <delete id="deleteDefinedLearn">
        delete from plm_learn where n IN (
            select l.n from plm_learn l, llm_word w
            where l.word = w.n
            and w.type not like '학습%'
        )
    </delete>
</mapper>